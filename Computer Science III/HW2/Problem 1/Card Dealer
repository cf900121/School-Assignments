import javax.swing.JOptionPane;
import java.util.Random;
import java.util.ArrayList;

public class Chris_Falco_HW3_Problem1
{
   static String[] card = new String[]{"A","2","3","4","5","6","7","8","9","10","J","Q","K"}; 
   static String[] suit = new String[]{"D", "H", "C", "S"}; //diamonds, hearts, clubs, spades
   
   static ArrayList<String> usedCards = new ArrayList<String>();
   //suits
   static ArrayList<String> diamonds = new ArrayList<String>();
   static ArrayList<String> hearts = new ArrayList<String>();
   static ArrayList<String> clubs = new ArrayList<String>();
   static ArrayList<String> spades = new ArrayList<String>();
   
   static int counter = 0;
   static int counter2 = 0;
   
   
   public static void main(String[] args)
   {
      String input = JOptionPane.showInputDialog("Enter the number of players in the game.");
      int players = Integer.parseInt(input);
      int cardsToDraw = 0;
      if(players > 0 && players < 11)
         cardsToDraw = players * 5;
      else
         System.out.println("Max of 10 Players");
      
      for(int i = 1; i <= cardsToDraw ; i++)
      {
         shuffle(i);
         
         if(i % 5 == 0)
         {
            sortDiamonds();
            sortHearts();
            sortClubs();
            sortSpades();
            System.out.print("\n\n");
         }
      }
   }
   
   public static void shuffle(int i)
   {
      Random cards = new Random();
      Random suits = new Random();
      int cardNumber = cards.nextInt(13);
      int suitNumber = suits.nextInt(4);
      String currentCard = card[cardNumber]+suit[suitNumber]; 
      
      
      
      if(counter == 0)
      {
         suitChecker(currentCard);
      }
         
      else if(counter > 0 && checkCard(currentCard) == true)
         shuffle(i);
         
      else if(counter > 0 && checkCard(currentCard)== false)
      {
         suitChecker(currentCard);
      }
         
      usedCards.add(currentCard);
      counter++;
      counter2++;
   }
   
   public static void suitChecker(String currentCard)
   {
      for(int i = 0; i < currentCard.length(); i++)
      {
         if(currentCard.charAt(i) == 'D')
            diamonds.add(currentCard);
            
         else if(currentCard.charAt(i) == 'H')
            hearts.add(currentCard);
            
         else if(currentCard.charAt(i) == 'C')
            clubs.add(currentCard);
            
         else if(currentCard.charAt(i) == 'S')
            spades.add(currentCard);
      }
      
   }
   
   public static void sortDiamonds()
    {
       for(int i=0;i<diamonds.size();i++)
       {
          for(int j=i+1;j<diamonds.size();j++)
          {
             String number;
             char currentCardNumber = diamonds.get(j).charAt(0);

             switch(currentCardNumber)
             {
                case '1':
                   number = "10";
                   break;

                case 'A':
                   number = "1";
                   break;

                case 'J':
                   number = "20";
                   break;

                case 'Q':
                   number = "30";
                   break;

                case 'K':
                   number = "40";
                   break;

                default: 
                   number = String.valueOf(currentCardNumber);
             }

             String number1;
             char currentCardNumber1 = diamonds.get(i).charAt(0);

             switch(currentCardNumber1)
             {
                case '1':
                   number1 = "10";
                   break;

                case 'A':
                   number1 = "1";
                   break;

                case 'J':
                   number1 = "20";
                   break;

                case 'Q':
                   number1 = "30";
                   break;

                case 'K':
                   number1 = "40";
                   break;

                default: 
                   number1 = String.valueOf(currentCardNumber1);
             }

             if (Integer.parseInt(number) < Integer.parseInt(number1)) 
             {
                String temp = diamonds.get(i);
                diamonds.set(i,diamonds.get(j));
                diamonds.set(j, temp);
             }           
          }
       }

       for(int i = 0; i < diamonds.size(); i++)
       {
          System.out.print(diamonds.get(i)+" ");
       }

       diamonds.clear();


    }
   
   public static void sortHearts()
      {
         for(int i=0;i<hearts.size();i++)
         {
            for(int j=i+1;j<hearts.size();j++)
            {
               String number;
               char currentCardNumber = hearts.get(j).charAt(0);
            
               switch(currentCardNumber)
               {
                  case '1':
                     number = "10";
                     break;
                     
                  case 'A':
                     number = "1";
                     break;
                     
                  case 'J':
                     number = "20";
                     break;
                   
                  case 'Q':
                     number = "30";
                     break;
                    
                  case 'K':
                     number = "40";
                     break;
               
                  default: 
                     number = String.valueOf(currentCardNumber);
               }
            
               String number1;
               char currentCardNumber1 = hearts.get(i).charAt(0);
            
               switch(currentCardNumber1)
               {
                  case '1':
                     number1 = "10";
                     break;
                     
                  case 'A':
                     number1 = "1";
                     break;
                     
                  case 'J':
                     number1 = "20";
                     break;
                   
                  case 'Q':
                     number1 = "30";
                     break;
                    
                  case 'K':
                     number1 = "40";
                     break;
               
                  default: 
                     number1 = String.valueOf(currentCardNumber1);
               }
               
               if (Integer.parseInt(number) < Integer.parseInt(number1)) 
               {
                  String temp = hearts.get(i);
                  hearts.set(i,hearts.get(j));
                  hearts.set(j, temp);
               }           
            }
         }
         
         for(int i = 0; i < hearts.size(); i++)
         {
            System.out.print(hearts.get(i)+" ");
         }
         
       hearts.clear();  
             
      }
      
   public static void sortClubs()
    {
        for(int i=0;i<clubs.size();i++)
       {
          for(int j=i+1;j<clubs.size();j++)
          {
             String number;
             char currentCardNumber = clubs.get(j).charAt(0);

             switch(currentCardNumber)
             {
                case '1':
                   number = "10";
                   break;

                case 'A':
                   number = "1";
                   break;

                case 'J':
                   number = "20";
                   break;

                case 'Q':
                   number = "30";
                   break;

                case 'K':
                   number = "40";
                   break;

                default: 
                   number = String.valueOf(currentCardNumber);
             }

             String number1;
             char currentCardNumber1 = clubs.get(i).charAt(0);

             switch(currentCardNumber1)
             {
                case '1':
                   number1 = "10";
                   break;

                case 'A':
                   number1 = "1";
                   break;

                case 'J':
                   number1 = "20";
                   break;

                case 'Q':
                   number1 = "30";
                   break;

                case 'K':
                   number1 = "40";
                   break;

                default: 
                   number1 = String.valueOf(currentCardNumber1);
             }

             if (Integer.parseInt(number) < Integer.parseInt(number1)) 
             {
                String temp = clubs.get(i);
                clubs.set(i,clubs.get(j));
                clubs.set(j, temp);
             }           
          }
       }

       for(int i = 0; i < clubs.size(); i++)
       {
          System.out.print(clubs.get(i)+" ");
       }   

       clubs.clear();

    }
   
   public static void sortSpades()
      {
         for(int i=0;i<spades.size();i++)
         {
            for(int j=i+1;j<spades.size();j++)
            {
               String number;
               char currentCardNumber = spades.get(j).charAt(0);
            
               switch(currentCardNumber)
               {
                  case '1':
                     number = "10";
                     break;
                     
                  case 'A':
                     number = "1";
                     break;
                     
                  case 'J':
                     number = "20";
                     break;
                   
                  case 'Q':
                     number = "30";
                     break;
                    
                  case 'K':
                     number = "40";
                     break;
               
                  default: 
                     number = String.valueOf(currentCardNumber);
               }
            
               String number1;
               char currentCardNumber1 = spades.get(i).charAt(0);
            
               switch(currentCardNumber1)
               {
                  case '1':
                     number1 = "10";
                     break;
                     
                  case 'A':
                     number1 = "1";
                     break;
                     
                  case 'J':
                     number1 = "20";
                     break;
                   
                  case 'Q':
                     number1 = "30";
                     break;
                    
                  case 'K':
                     number1 = "40";
                     break;
               
                  default: 
                     number1 = String.valueOf(currentCardNumber1);
               }
               
               if (Integer.parseInt(number) < Integer.parseInt(number1)) 
               {
                  String temp = spades.get(i);
                  spades.set(i,spades.get(j));
                  spades.set(j, temp);
               }           
            }
         }
         
         for(int i = 0; i < spades.size(); i++)
         {
            System.out.print(spades.get(i)+" ");
         }   
      
      
         spades.clear();
         
      }
   
   public static boolean checkCard(String currentCard)
   {
      if(usedCards.contains(currentCard))
         return true;
      else
         return false;
   }
}
