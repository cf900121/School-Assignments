//Chris Falco

import java.util.*;

public class Cashiers
{

   public static int[][] queues;
   public static int front[];
   public static int back[];
   public static int currentSize[];
   public static int customer;
   public static String input;
   
   public Cashiers()
   {
      queues = new int [3][6];
      front = new int[3];
      back = new int[3];
      currentSize = new int[3];
      customer = 1;
   }
   
   public static void clear()
   {
      for(int i = 0; i < 3; i++)
      {
         front[i] = 0;
         back[i] = 5;
         currentSize[i] = 0;
      }
      
      for(int i = 0; i < queues.length; i++)
      {
         for(int j = 0; j < queues[i].length; j++)
         {
            queues[i][j] = 0;
         }
      }

      display();      
            
   }
   
   public static void fill()
   {
      clear();
      
      for(int i = 0; i < queues.length; i++)
      {
         for(int j = 0; j < queues[i].length; j++)
         {
            queues[i][j] = customer;
            customer++;
            currentSize[i]++;
         }
      }
      
      display();
   }
   
   public static void display()
   {
   
      for(int i = 0; i < queues.length; i++)
      {
         for(int j = 0; j < queues[i].length; j++)
         {
            System.out.printf("%3d", queues[i][j]);
            
            if(j == front[i])
               System.out.print("F");
               
            if(j == back[i])
               System.out.print("B");
               
            System.out.print("\t");
         }
         
         System.out.println();
      }
      
      System.out.println();
   }
   
   public static void dequeue(int which)
   {
      
      int queue = which + 1;
      int customerNum = queues[which][front[which]];
      
      if(queues[which][front[which]] == 0)
         System.out.println("No on in queue " + queue);
      
      else
      {
         queues[which][front[which]]= 0;
         
         if(front[which] == 5)
         {
            front[which] = 0;
            currentSize[which]--;
         }
         
         else
         {
            front[which]++;
            currentSize[which]--;
         }
         
      display();
      System.out.println("Customer "+ customerNum+ " is finished");
      
      }
   }
   
   public static boolean enqueue()
   {
      
      int a = currentSize[0];
      int b = currentSize[1];
      int c = currentSize[2];
      
      int which = 0;
      
      if(a == 6 && b == 6 & c == 6)
      {
         System.out.println("No more room!");
         return false;
      }
      
      else if(a <= b && a <= c)
         which = 0;
      
      else if(b < a && b <= c)
         which = 1;
      
      else if(c < a && c < b)
         which = 2;
      
      currentSize[which]++;
      
      if(back[which]== 5)
         back[which]= 0;
         
      else
         back[which]++;
         
      queues[which][back[which]]= customer++;
      
      display();
      return true;
   
   }
   
   public static void main(String[] args)
   {
      
      Scanner kb = new Scanner(System.in);
      
      new Cashiers();
      clear();
      
      do
      {
         System.out.print("Input Command E or 1 or 2 or 3 or F or C or Q : ");
         input = kb.nextLine().toUpperCase();
         System.out.println();
         
         switch(input)
         {
            case "E":
               enqueue();
               break;
            case "1":
               dequeue(0);
               break;
            case "2":
               dequeue(1);
               break;
            case "3":
               dequeue(2);
               break;
            case "F":
               fill();
               break;
            case "C":
               clear();
               break;
            case "Q":
               break;
            default:
               System.out.println("Invalid input!");
               break;
         }
      
      } while (!(input.equals("Q")));
      
   }
}
